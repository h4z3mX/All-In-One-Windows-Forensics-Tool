import os
import shutil
import requests
import hashlib
from tkinter import messagebox


# Setting up VirusTotal API
VIRUSTOTAL_API_KEY = "your_virustotal_api_key_here"
VIRUSTOTAL_API_URL = "https://www.virustotal.com/api/v3/files"


def calculate_file_hash(file_path):
    """Calculate the SHA-256 hash of a file."""
    sha256_hash = hashlib.sha256()
    with open(file_path, "rb") as f:
        for byte_block in iter(lambda: f.read(4096), b""):
            sha256_hash.update(byte_block)
    return sha256_hash.hexdigest()


def check_file_with_virustotal(file_path):
    """Check if a file is harmful using VirusTotal API."""
    file_hash = calculate_file_hash(file_path)
    headers = {
        "x-apikey": VIRUSTOTAL_API_KEY
    }
    response = requests.get(f"{VIRUSTOTAL_API_URL}/{file_hash}", headers=headers)

    if response.status_code == 200:
        result = response.json()
        if result.get("data", {}).get("attributes", {}).get("last_analysis_stats", {}).get("malicious", 0) > 0:
            return True
    return False


def collect_suspicious_binaries(output_dir):
    """Collect and check binaries with suspicious extensions from common directories."""
    suspicious_extensions = [".exe", ".dll", ".bat", ".vbs", ".js"]
    common_dirs = [
        os.path.expanduser("\\Downloads"),
        os.path.expanduser("\\Desktop"),
        "C:\\ProgramData",
    ]

    harmful_files = []

    for directory in common_dirs:
        if not os.path.exists(directory):
            continue

        for root, _, files in os.walk(directory):
            for file in files:
                if any(file.lower().endswith(ext) for ext in suspicious_extensions):
                    source_path = os.path.join(root, file)
                    is_harmful = check_file_with_virustotal(source_path)
                    if is_harmful:
                        harmful_files.append(source_path)
                        shutil.copy2(source_path, os.path.join(output_dir, file))

    return harmful_files


def collect_logs(output_dir):
    """Collect logs from Windows Event Viewer."""
    logs_dir = os.path.join(output_dir, "logs")
    os.makedirs(logs_dir, exist_ok=True)

    try:
        for log_type in ["Application", "System", "Security"]:
            log_path = os.path.join(logs_dir, f"{log_type}.evtx")
            os.system(f"wevtutil epl {log_type} {log_path}")
    except Exception as e:
        print(f"Error exporting logs: {e}")


def collect_malware_artifacts(output_dir):
    """Collect suspicious files and logs."""
    try:
        harmful_files = collect_suspicious_binaries(output_dir)
        collect_logs(output_dir)

        if harmful_files:
            messagebox.showinfo(
                "Success",
                f"Artifact collection complete. Harmful files detected: {len(harmful_files)}\nFiles: {', '.join(harmful_files)}"
            )
        else:
            messagebox.showinfo("Success", "Artifact collection complete. No harmful files detected.")
    except Exception as e:
        messagebox.showerror("Error", f"An error occurred: {e}")
